#!/usr/bin/env python

from common import jailer_home, sdir, run_report_status, Jail
from common import destdir, user, apply_script_via_nspawn
import argparse
from os.path import isfile, isdir
from os import makedirs
from subprocess import run

parser = argparse.ArgumentParser(description='Rebuild a clean version of this jail, replaying the original clone/snapshot command that built it originally along with the previously applied preparation scripts.')
parser.add_argument("jail", help="The jail to refresh")
parser.add_argument('--debug', action="store_true",
                    help="Enable verbose output")

args = parser.parse_args()

jail = Jail(args.jail)

if args.debug:
    debugflag=["--debug"]
else:
    debugflag=[]

if not isdir(jail.fsroot):
    print("refresh: error: jail '%s' does not exist at %s" % (jail.name, jail.loc))
    exit(1)

scriptsdir = sdir + "/../scripts/init_scripts/" + jail.osname


previouscmd = jail.command_line.split("|")
prepline = jail.prep_line

print("==> Removing existing jail %s" % (jail.name))
jail.delete_except_home(args.debug)

if previouscmd[0] == "snapshot":
    print("==> Replaying original snapshot command:")
    run([sdir+"/snapshot", previouscmd[1], jail.name] + debugflag)
elif previouscmd[0] == "clone":
    print("==> Replaying original clone command: cloning os '%s' into jail '%s'" % (previouscmd[1], jail.name))
    run([sdir+"/clone", previouscmd[1], "--name=" + jail.name] + debugflag)

if prepline:
    if prepline=="default":
        addons=[]
        print("==> Replaying original preparation scripts with no addons")
    else:
        addons=[prepline]
        print("==> Replaying original preparation scripts with addons '%s'" % prepline)
    run([sdir+"/addons", jail.name] + addons + debugflag)


